version: '3'
 
services:
  gitlab:
    image: 'gitlab/gitlab-ce:13.0.6-ce.0'
    container_name: gitlab
    restart: unless-stopped
    hostname: 'gitlab.wouterstemgee.be'         
    environment:
      GITLAB_OMNIBUS_CONFIG: |
        external_url 'https://gitlab.wouterstemgee.be'      
        nginx['listen_port'] = 80
        nginx['listen_https'] = false
        nginx['proxy_set_headers'] = {
          "X-Forwarded-Proto" => "https",
          "X-Forwarded-Ssl" => "on"
        }
        # DATABASE CONNECTION SETTINGS: in our case we use postgresql as database
        gitlab_rails['db_adapter'] = "postgresql"
        gitlab_rails['db_database'] = "gitlab"
        gitlab_rails['db_username'] = "postgres"
        gitlab_rails['db_password'] = "password" 
        gitlab_rails['db_host'] = "database"


        # unicorn['worker_processes'] = 25
        # GITLAB DOCKER IMAGE REGISTRY: so that we can use our docker image registry with gitlab
        registry['enable'] = false  # we do not activate this option because we provide our own registry
        gitlab_rails['registry_enabled'] = true
        gitlab_rails['registry_host'] = "docker.jfrog.wouterstemgee.be"                       
        gitlab_rails['registry_api_url'] = "https://docker.jfrog.wouterstemgee.be"          
 
        # SMTP SETTINGS: So that gitlab can send emails. In our case we send via google mail.
        gitlab_rails['smtp_enable'] = false
        gitlab_rails['smtp_address'] = "smtp.gmail.com"
        gitlab_rails['smtp_port'] = 587
        gitlab_rails['smtp_user_name'] = "gitlab@wouterstemgee.be"
        gitlab_rails['smtp_password'] = "xxxx"
        gitlab_rails['smtp_domain'] = "smtp.gmail.com"
        gitlab_rails['smtp_authentication'] = "login"
        gitlab_rails['smtp_enable_starttls_auto'] = true
        gitlab_rails['smtp_tls'] = false
        gitlab_rails['smtp_openssl_verify_mode'] = "peer"
    ports:
      - "2222:22"
    networks:
      - traefik_net
      - gitlab_net
    volumes:
      - /srv/docker/volumes/gitlab/config:/etc/gitlab
      - /srv/docker/volumes/gitlab/logs:/var/log/gitlab
      - /srv/docker/volumes/gitlab/data:/var/opt/gitlab
      - /srv/docker/volumes/registry/certs:/certs
    labels:
      - "traefik.enable=true"
      - "traefik.gitlab.port=80"
      - "traefik.gitlab.backend=gitlab"
      - "traefik.gitlab.frontend.rule=Host:gitlab.wouterstemgee.be"      
      - "traefik.gitlab.frontend.entryPoints=http,https"
      - "traefik.docker.network=devenv_traefik_net"

  jfrog:
    restart: unless-stopped
    image: docker.bintray.io/jfrog/artifactory-jcr:latest
    container_name: jfrog
    volumes:
      - $HOME/artifactory:/var/opt/jfrog/artifactory
    networks:
      - traefik_net
    labels:
      - "traefik.enable=true"
      - "traefik.jfrog.frontend.rule=Host:jfrog.wouterstemgee.be"
      - "traefik.jfrog.port=8082"
      - "traefik.jfrog.backend=jfrog"
      - "traefik.registry.frontend.rule=Host:docker.jfrog.wouterstemgee.be"
      - "traefik.registry.url=http://jfrog.wouterstemgee.be/artifactory/docker/"
      - "traefik.artifactory.frontend.rule=Host:jfrog.wouterstemgee.be;PathPrefix:/artifactory/"
      - "traefik.artifactory.backend.url=http://jfrog:8081/artifactory/"

  database:
    image: postgres:11-alpine
    container_name: database
    restart: unless-stopped
    networks:
      - gitlab_net
    environment:
      POSTGRES_PASSWORD: "password"
      POSTGRES_DB: gitlab
    volumes:
      - /srv/docker/volumes/gitlab/database:/var/lib/postgresql/data
 
  traefik:
    container_name: traefik
    restart: unless-stopped
    image: traefik:v1.7
    command:
        --configFile=/var/traefik/traefik.toml
    ports:
      - "443:443"
      - "80:80"
      - "8080:8080"
    networks:
      - traefik_net
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - $HOME/traefik/traefik.toml:/var/traefik/traefik.toml:ro
      - $HOME/traefik/acme.json:/acme.json
      - /srv/docker/volumes/traefik/log:/log
 
  bookstack:
    image: linuxserver/bookstack
    container_name: bookstack
    environment:
      - PUID=1000
      - PGID=1000
      - DB_HOST=bookstack_db
      - DB_USER=bookstack
      - DB_PASS=password
      - DB_DATABASE=bookstackapp
      - APP_URL=https://wiki.wouterstemgee.be
    networks:
      - traefik_net
    volumes:
      - $HOME/bookstack/config:/config
    ports:
      - 6875:80
    restart: unless-stopped
    depends_on:
      - bookstack_db
    labels:
      - "traefik.enable=true"
      - "traefik.wiki.port=80"
      - "traefik.wiki.backend=bookstack"
      - "traefik.wiki.frontend.rule=Host:wiki.wouterstemgee.be"
      - "traefik.wiki.frontend.entryPoints=http,https"
      - "traefik.docker.network=devenv_traefik_net"

  bookstack_db:
    image: linuxserver/mariadb
    container_name: bookstack_db
    environment:
      - PUID=1000
      - PGID=1000
      - MYSQL_ROOT_PASSWORD=password
      - TZ=Europe/Brussels
      - MYSQL_DATABASE=bookstackapp
      - MYSQL_USER=bookstack
      - MYSQL_PASSWORD=password
    networks:
      - traefik_net
    volumes:
      - $HOME/bookstack/data:/config
    restart: unless-stopped

  datalab:
    build: jupyterhub
    image: jupyterhub_img
    container_name: datalab
    restart: unless-stopped
    environment:
      - DOCKER_JUPYTER_IMAGE=jupyter/tensorflow-notebook:8b4d6f6ac0d7
      - DOCKER_NETWORK_NAME=devenv_traefik_net
      - HUB_IP=datalab
      - HOST=datalab.wouterstemgee.be
      - GITLAB_HOST=gitlab.wouterstemgee.be
      - GITLAB_CLIENT_ID=<client_id>
      - GITLAB_CLIENT_SECRET=<client_secret>
      - OAUTH_CALLBACK_URL=https://datalab.wouterstemgee.be/hub/oauth_callback
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - datalab_volume:/srv/jupyterhub
    networks:
      - traefik_net
    labels:
      - "traefik.enable=true"
      - "traefik.datalab.backend=datalab"
      - "traefik.datalab.frontend.rule=Host:datalab.wouterstemgee.be"
      - "traefik.datalab.frontend.entryPoints=http,https"
      - "traefik.docker.network=devenv_traefik_net"
 
  gitlab-runner:
    image: gitlab/gitlab-runner:latest
    container_name: gitlab-runner
    restart: always
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /srv/gitlab-runner/config:/etc/gitlab-runner
    networks:
      - traefik_net

  mongodb:
    image: mongo
    container_name: mongodb
    restart: always
    networks:
      - traefik_net

  mongo-express:
    image: mongo-express
    container_name: mongo-express
    ports:
      - "8081:8081"
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.mongo.port=8081"
      - "traefik.mongo.backend=mongo-express"
      - "traefik.mongo.frontend.rule=Host:mongo.wouterstemgee.be"
      - "traefik.mongo.frontend.entryPoints=http,https"
      - "traefik.mongo.network=devenv_traefik_net"
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongodb
    networks:
      - traefik_net
    depends_on:
      - mongodb

  jenkins:
    image: jenkinsci/blueocean
    container_name: jenkins
    restart: always
    networks:
      - traefik_net
    environment:
      - DOCKER_HOST=tcp://jenkins-docker:2376
      - DOCKER_CERT_PATH=/certs/client
      - DOCKER_TLS_VERIFY=1
    ports:
      - "8082:8080"
      - "50000:50000"
    labels:
      - "traefik.enable=true"
      - "traefik.jenkins.port=8080"
      - "traefik.jenkins.backend=jenkins"
      - "traefik.jenkins.frontend.rule=Host:ci.wouterstemgee.be"
      - "traefik.jenkins.frontend.entryPoints=http,https"
      - "traefik.jenkins.network=devenv_jenkins_net"
    volumes:
      - jenkins-data:/var/jenkins_home
      - jenkins-docker-certs:/certs/client:ro

  jenkins-docker:
    image: docker:dind
    container_name: jenkins-docker
    restart: always
    networks:
      - traefik_net
    environment:
      - DOCKER_TLS_CERTDIR=/certs
    volumes:
      - jenkins-docker-certs:/certs/client
      - jenkins-data:/var/jenkins_home
    ports:
      - "2376:2376"
    privileged: true
  
volumes:
  datalab_volume:
  jenkins-data:
  jenkins-docker-certs:

networks:
  traefik_net:
    driver: bridge
  gitlab_net:
